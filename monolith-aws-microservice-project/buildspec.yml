version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "211125666158"
    AWS_DEFAULT_REGION: "us-east-1"
    ECR_REPOSITORY_NAME: "crypto-app"
    ECS_CONTAINER_NAME: "crypto-app"
    ECS_CLUSTER: "microservices-cluster"
    SERVICE_NAME: "crypto-app-service"
    TASK_DEFINITION_FAMILY: "crypto-app"

phases:
  pre_build:
    commands:
      - echo Logging into Amazon ECR...
      - REPOSITORY_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Using image tag:$IMAGE_TAG

  build:
    commands:
      - echo Changing to project directory...
      - cd monolith-aws-microservice-project
      - echo Building Docker image in subfolder...
      - docker build -t "$REPOSITORY_URI:$IMAGE_TAG" .
      - docker tag "$REPOSITORY_URI:$IMAGE_TAG" "$REPOSITORY_URI:latest"

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"kodekloud-crypto-coin","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > image-definitions.json
      - echo Registering new ECS Task Definition...
      - sed -i "s;<IMAGE_URI>;$REPOSITORY_URI:latest;g" task-definition.json
      - aws ecs register-task-definition --cli-input-json file://task-definition.json

artifacts:
  files:
    - image-definitions.json
